/*******************************************************************************
 * Copyright (c) 2013 Metadata Technology Ltd.
 *
 * All rights reserved. This program and the accompanying materials are made 
 * available under the terms of the GNU Lesser General Public License v 3.0 
 * which accompanies this distribution, and is available at
 * http://www.gnu.org/licenses/lgpl.html
 *
 * This file is part of the SDMX Component Library.
 *
 * The SDMX Component Library is free software: you can redistribute it and/or 
 * modify it under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation, either version 3 of the License,
 * or (at your option) any later version.
 *
 * The SDMX Component Library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of 
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser 
 * General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License 
 * along with The SDMX Component Library If not, see 
 * http://www.gnu.org/licenses/lgpl.
 *
 * Contributors:
 * Metadata Technology - initial API and implementation
 ******************************************************************************/
package org.sdmxsource.sdmx.api.manager.persist.mutable;

import org.sdmxsource.sdmx.api.model.mutable.base.MaintainableMutableBean;

import java.util.Set;


/**
 * Interface to perform save and delete operations on Mutable Beans.
 *
 * @author Matt Nelson
 */
public interface SdmxMutableBeanPersistenceManager {

    //Save Methods

    /**
     * Saves the maintainable mutable bean.
     * <p>
     * The bean is validated and the saved instance is returned as a MaintainableMutableBean.
     * <p>
     * <b>NOTE : </b>Certain attributes may have been automatically generated by the system regardless of what was
     * supplied, and example is URN which is system generated and any supplied value is ignored.
     *
     * @param maintainable The maintainable to save.
     * @return MaintainableMutableBean as a representation of what was saved - with values such as URN generated by the system
     */
    MaintainableMutableBean saveMaintainable(MaintainableMutableBean maintainable);

    /**
     * Saves the specified set of maintainables.
     * <p>
     * The beans are validated and the saved instances are returned as a Set of MaintainableMutableBean.
     * <p>
     * <b>NOTE : </b> Certain attributes may have been automatically generated by the system regardless of what was
     * supplied, and example is URN which is system generated and any supplied value is ignored.
     *
     * @param maintainables The Set of maintainables to save.
     * @return Set of MaintainableMutableBean   as a representation of what was saved - with values such as URN generated by the system
     */
    Set<MaintainableMutableBean> saveMaintainables(Set<MaintainableMutableBean> maintainables);

    //Delete Methods

    /**
     * Deletes the maintainable and returns the deleted maintainable.
     * <p>
     * The bean is validated and the instance is returned as MaintainableMutableBean.
     * <p>
     * <b>NOTE : </b> Certain attributes may have been automatically generated by the system regardless of what was
     * supplied, and example is URN which is system generated and any supplied value is ignored.
     *
     * @param maintainable The maintainable to delete.
     * @return MaintainableMutableBean as a representation of what was deleted - with values such as URN generated by the system
     */
    MaintainableMutableBean deleteMaintainable(MaintainableMutableBean maintainable);

    /**
     * Deletes the specified set of maintainables and returns the set of deleted maintainables.
     * <p>
     * The beans are validated and the deleted instances are returned as a Set of MaintainableMutableBean.
     * <p>
     * <b>NOTE : </b> Certain attributes may have been automatically generated by the system regardless of what was
     * supplied, and example is URN which is system generated and any supplied value is ignored.
     *
     * @param maintainables The Set of maintainables to delete.
     * @return Set of MaintainableMutableBean    as a representation of what was deleted - with values such as URN generated by the system
     */
    Set<MaintainableMutableBean> deleteMaintainables(Set<MaintainableMutableBean> maintainables);

}
